{"version":3,"file":"bundles\\pages\\index.js","sources":["webpack:///webpack/bootstrap 3ccce0d56fd01370ba53","webpack:///components/Exchange.js","webpack:///components/ExchangeRequest.js","webpack:///components/ExchangeResponse.js","webpack:///components/Layout.js","webpack:///components/LettersComponent.js","webpack:///components/LoadingScreen.js","webpack:///components/Page.js","webpack:///components/SignIn.js","webpack:///components/WaitingForVerification.js","webpack:///constants/config.js","webpack:///constants/credentials.js","webpack:///constants/endpoints.js","webpack:///constants/strings.js","webpack:///data/dataSource.js","webpack:///models/ExchangeEntity.js","webpack:///models/User.js","webpack:///pages/index.js","webpack:///utils/gameUtils.js","webpack:///utils/notificationUtils.js","webpack:///utils/utils.js","webpack:///external \"axios\"","webpack:///external \"next/head\"","webpack:///external \"pusher-js\"","webpack:///external \"react\"","webpack:///external \"react-notify-toast\"","webpack:///external \"reactstrap\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ccce0d56fd01370ba53","import React from \"react\";\r\nimport data from \"../data/dataSource\";\r\nimport strings from '../constants/strings'\r\nimport notificationUtils from \"../utils/notificationUtils\"\r\n\r\nexport default class extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            birthday: '',\r\n            favouriteFood: 'default',\r\n            deshu: \"default\",\r\n            letterToExchange: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n        console.log(\"Received new props \"+JSON.stringify(props))\r\n        console.log(\"Trying to retrieve from cache\")\r\n        this.retrieveFromCache(props)\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"Component will mount\")\r\n        this.retrieveFromCache(this.props)\r\n    }\r\n\r\n    handleBirthdayChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            birthday: e.target.value\r\n        })\r\n    }\r\n\r\n    handleFavouriteFoodChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            favouriteFood: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLetterToExchangeChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            letterToExchange: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDeshuChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            deshu: e.target.value\r\n        })\r\n    }\r\n\r\n    updateExchangeData = (exchangeData) => {\r\n        console.log(\"Updating exchange data\")\r\n        this.setState({\r\n            birthday: exchangeData.birthday,\r\n            favouriteFood: exchangeData.favouriteFood,\r\n            deshu: exchangeData.deshu,\r\n        })\r\n    }\r\n\r\n    retrieveFromCacheByUserName = (counterParty) => {\r\n        const cachedObject = JSON.parse(localStorage.getItem(counterParty))\r\n        if(cachedObject !== null){\r\n            console.log(\"Found cached data for \"+counterParty+\": \"+JSON.stringify(cachedObject))\r\n            this.updateExchangeData(cachedObject)\r\n        }else\r\n            console.log(\"No cache found for \"+counterParty)\r\n    }\r\n\r\n    checkIfFieldsAreComplete = (userSelected,birthday,favouriteFood,deshu,letterToExchange) => {\r\n        if( !userSelected || !birthday || !favouriteFood || !deshu || !letterToExchange){\r\n            notificationUtils.showNotification(strings.NOTIFICATION_INCOMPLETE_DETAILS)\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render(){\r\n        console.log(\"State is \"+JSON.stringify(this.state))\r\n        return(\r\n            <div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label-general\">Name</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label-general\">{this.props.targetUser}</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label-general\">Deshu</label>\r\n                    <select value={this.state.deshu} onChange={this.handleDeshuChange} className=\"input-general\" name=\"deshu\">\r\n                        <option className=\"option-general\" disabled value=\"default\">Select his/her deshu.</option>\r\n                        {data.DESHU_OPTIONS.map(deshu => {\r\n                            return <option className=\"option-general\" value={deshu}>{deshu}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label-general\">Birthday</label>\r\n                    <input type=\"date\" className=\"input-general\" name=\"birthday\" value={this.state.birthday} onChange={this.handleBirthdayChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label-general\">Favourite Food</label>\r\n                    <select value={this.state.favouriteFood} className=\"input-general\" name=\"favouriteFood\" onChange={this.handleFavouriteFoodChange}>\r\n                        <option className=\"option-general\"disabled value=\"default\">Select his/her favourite food</option>\r\n                        {data.FOOD_OPTIONS.map(foodOption => {\r\n                            return <option className=\"option-general\" value={foodOption}>{foodOption}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label-general\">Letter To Exchange Away</label>\r\n                    <select className=\"input-general\" name=\"letterToExchange\"\r\n                            onChange={this.handleLetterToExchangeChange}>\r\n                        <option className=\"option-general\" disabled selected value>Select a letter to exchange away</option>\r\n                        {this.props.lettersAvailable.map(letter => {\r\n                            return <option className=\"option-general\" value={letter}>{/\\S/.test(letter)?letter:\"Space\"}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.submitForm} className=\"btn-submit\">Submit</button>\r\n                </div>\r\n            </div>\r\n        )}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// components/Exchange.js","import React from 'react'\r\nimport Exchange from './Exchange'\r\nimport gameUtils from \"../utils/gameUtils\"\r\nimport ExchangeEntity from \"../models/ExchangeEntity\";\r\nimport notificationUtils from \"../utils/notificationUtils\"\r\n\r\nexport default class extends Exchange{\r\n\r\n    submitForm = (e) => {\r\n        const request_user = this.props.userName\r\n        const respond_user = this.props.userSelected\r\n        const birthday = this.state.birthday\r\n        const favouriteFood = this.state.favouriteFood\r\n        const deshu = this.state.deshu\r\n        const letterToExchange = this.state.letterToExchange\r\n        const letterToReceive = ''\r\n        if (this.checkIfFieldsAreComplete(respond_user,birthday,favouriteFood,deshu,letterToExchange)){\r\n            var exchangeRequest = new ExchangeEntity(request_user,respond_user,birthday,favouriteFood,deshu,letterToExchange,letterToReceive)\r\n            console.log(\"ExchangeRequest: \" + JSON.stringify(exchangeRequest))\r\n            gameUtils.sendExchangeRequest(exchangeRequest).then((succeed) => {\r\n                this.props.onExchangeRequestSubmitSuccess(this.state.letterToExchange, exchangeRequest)\r\n                this.props.updateExchangeRequest(exchangeRequest)\r\n            },function(errMessage){\r\n                notificationUtils.showNotification(errMessage)\r\n            })\r\n        }\r\n    }\r\n\r\n    retrieveFromCache = (props) => {\r\n        this.retrieveFromCacheByUserName(props.userSelected)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// components/ExchangeRequest.js","import React from \"react\";\r\nimport Exchange from './Exchange'\r\nimport gameUtils from \"../utils/gameUtils\";\r\nimport ExchangeEntity from \"../models/ExchangeEntity\";\r\nimport notificationUtils from \"../utils/notificationUtils\";\r\n\r\nexport default class extends Exchange{\r\n\r\n    submitForm = (e) => {\r\n        const request_user = this.props.exchangeRequest.request_user\r\n        const respond_user = this.props.exchangeRequest.respond_user\r\n        const birthday = this.state.birthday\r\n        const favouriteFood = this.state.favouriteFood\r\n        const deshu = this.state.deshu\r\n        const letterToExchange = this.state.letterToExchange\r\n        const letterToReceive = this.props.exchangeRequest.letterToExchange\r\n        if (this.checkIfFieldsAreComplete(respond_user,birthday,favouriteFood,deshu,letterToExchange)){\r\n            var exchangeResponse = new ExchangeEntity(request_user,respond_user,birthday,favouriteFood,deshu,letterToExchange,letterToReceive)\r\n            console.log(\"ExchangeResponse: \"+JSON.stringify(exchangeResponse))\r\n            gameUtils.sendExchangeResponse(exchangeResponse).then((exchResponse) => {\r\n                this.props.onExchangeResponseSubmitSuccess(exchResponse)\r\n            },(errMessage) => {\r\n                notificationUtils.showNotification(errMessage)\r\n            })\r\n        }\r\n    }\r\n\r\n    retrieveFromCache = (props) => {\r\n        this.retrieveFromCacheByUserName(props.exchangeRequest.request_user)\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// components/ExchangeResponse.js","import React from \"react\";\r\nimport Head from 'next/head'\r\nimport { Container } from 'reactstrap'\r\nimport Notifications from \"react-notify-toast\";\r\n\r\nexport default class extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"main\">\r\n                <Head>\r\n                    <meta name=\"viewport\" content=\"width=device-width,height=device-height\" />\r\n                    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\"\r\n                          integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\"\r\n                          crossOrigin=\"anonymous\"/>\r\n                    <link rel=\"stylesheet\" href=\"https://unpkg.com/react-tabs@2/style/react-tabs.css\"/>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <meta name=\"mobile-web-app-capable\" content=\"yes\"/>\r\n                    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/>\r\n                </Head>\r\n                <div>\r\n                    <Container>\r\n                        <Notifications />\r\n                            {this.props.children}\r\n                    </Container>\r\n                </div>\r\n                <style jsx global>{`\r\n                    #main {\r\n                            background: linear-gradient(#26EFB4, #07466F);\r\n                            position: absolute;\r\n                            top: 0;\r\n                            left: 0;\r\n                            height:100%;\r\n                            width:100%;\r\n                            max-height:100%;\r\n                            max-width:100%;\r\n                            overflow-x: hidden;\r\n                    }\r\n                    .wrapper {\r\n                        background: transparent;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        padding: 7px;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                    }\r\n                    .form-group-container {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        width: 100%;\r\n                        padding: 7px;\r\n                    }\r\n                    .label-general {\r\n                        color: white;\r\n                        font-family: 'Roboto Medium', sans-serif;\r\n                        font-size: 100%;\r\n                        font-weight: lighter;\r\n                    }\r\n                    .option-general {\r\n                        color: black;\r\n                        font-family: 'Roboto Medium', sans-serif;\r\n                        font-size: 100%;\r\n                        font-weight: lighter;\r\n                    }\r\n                    .input-general{\r\n                         background: transparent ;\r\n                         border: 1px solid #fff;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         padding: 7px;\r\n                         width: 100%;\r\n                    }\r\n                    .list-item-general{\r\n                         background: transparent ;\r\n                         border: 1px solid #fff;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         padding: 7px;\r\n                         width: 100%;\r\n                         list-style: none;\r\n                    }\r\n                    .btn {\r\n                         background: transparent;\r\n                         box-shadow: none;\r\n                         border: 1px solid #fff;\r\n                         transition: .3s all ease;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         width: 80px;\r\n                         height: 100%;\r\n                    }\r\n                    .btn-submit {\r\n                         background: transparent;\r\n                         box-shadow: none;\r\n                         border: 1px solid #fff;\r\n                         transition: .3s all ease;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         width: 80px;\r\n                         padding: 7px;\r\n                    }\r\n                    .btn-cancel {\r\n                         background: transparent;\r\n                         box-shadow: none;\r\n                         border: 1px solid #fff;\r\n                         transition: .3s all ease;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         width: 80px;\r\n                         height: 100%;\r\n                         padding: 7px;\r\n                         margin-top: 15px;\r\n                    }\r\n                    .App-logo {\r\n                      animation: App-logo-spin infinite 20s linear;\r\n                      height: 80px;\r\n                    }\r\n                    @keyframes App-logo-spin {\r\n                      from { transform: rotate(0deg); }\r\n                      to { transform: rotate(360deg); }\r\n                    }\r\n                    //*{ border:2px solid #CD1821 }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// components/Layout.js","import React from 'react'\r\nimport gameUtils from \"../utils/gameUtils\";\r\n\r\nexport default class LetterComponent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            lettersUsed: [\"D\",\"F\"],\r\n            lettersAvailable: props.lettersAssigned.slice()\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        console.log(\"Letter component will receive props\")\r\n        this.setState({\r\n            lettersUsed: Array.apply(null,{length: newProps.lettersAssigned.length}).map(function() { return '-'; }),\r\n            lettersAvailable: newProps.lettersAssigned.slice()\r\n        })\r\n    }\r\n\r\n    handleLetterSelected = (e) => {\r\n        console.log(\"Target value is\"+e.target.value+\".\")\r\n        var lettersUsed = this.state.lettersUsed\r\n        var lettersAvailable = this.state.lettersAvailable\r\n        lettersUsed[lettersUsed.indexOf('-')] = this.state.lettersAvailable[e.target.value]\r\n        console.log(\"Letters used are now \"+lettersUsed.join(' '))\r\n        lettersAvailable.splice(e.target.value, 1)\r\n        this.setState({\r\n            lettersUsed: lettersUsed,\r\n            lettersAvailable: lettersAvailable\r\n        })\r\n        this.handleLettersChanged()\r\n    }\r\n\r\n    removeOneCharFromLettersUsed = (e) => {\r\n        var lettersUsed = this.state.lettersUsed\r\n        var index = lettersUsed.indexOf('-')\r\n        if (index != 0) {\r\n            var lettersUsed = this.state.lettersUsed\r\n            var lettersAvailable = this.state.lettersAvailable\r\n            var indexToBeRemoved = 0\r\n            if (index != -1)\r\n                indexToBeRemoved = index - 1\r\n            else\r\n                indexToBeRemoved = lettersUsed.length-1\r\n            var letterRemoved = lettersUsed[indexToBeRemoved]\r\n            lettersUsed[indexToBeRemoved] = '-'\r\n            lettersAvailable.push(letterRemoved)\r\n            this.setState({\r\n                lettersUsed: lettersUsed,\r\n                lettersAvailable: lettersAvailable\r\n            })\r\n            this.handleLettersChanged()\r\n        }\r\n\r\n    }\r\n\r\n    handleLettersChanged = () => {\r\n        if(this.state.lettersUsed.join('') === this.props.userName && typeof window !== 'undefined')\r\n            gameUtils.completeGame().then(()=>{\r\n                localStorage.clear()\r\n                this.props.onGameCompleted()\r\n                window.alert(\"You have completed the game!\")\r\n                window.location.href='/leaderboard'\r\n            },function(err){})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div id=\"instructions2\" className=\"form-group\">\r\n                    <label className=\"label-general\">To complete the game, click on the boxes below to form your username: {this.props.userName}</label>\r\n                </div>\r\n                <div id=\"instructions\" className=\"form-group\">\r\n                    <label className=\"label-general\">To get the letters you need, click a player on the left to begin exchanging letters with him/her.</label>\r\n                </div>\r\n                <div className=\"form-group-container\">\r\n                    <pre className=\"pre-general\">{this.state.lettersUsed.join(' ')}</pre>\r\n                    <button onClick={this.removeOneCharFromLettersUsed} className=\"btn-back\">Backspace</button>\r\n                </div>\r\n                <div className=\"letter-available\">\r\n                    {this.state.lettersAvailable.map((letter,index) => {\r\n                        return <button value={index} onClick={this.handleLetterSelected} className=\"btn-letter\">{/\\S/.test(letter)?letter:\"Space\"}</button>\r\n                    })}\r\n                </div>\r\n                <style jsx>{`\r\n                    .letter-available {\r\n                              padding: 7px;\r\n                    }\r\n                    #instructions {\r\n                              margin-bottom: 15px;\r\n                    }\r\n                    #instructions2 {\r\n                              margin-bottom: 15px;\r\n                    }\r\n                    .pre-general {\r\n                        color: black;\r\n                        background: transparent;\r\n                        border: 0px;\r\n                        font-size: 20px;\r\n                    }\r\n                    .btn-back {\r\n                         background: transparent;\r\n                         box-shadow: none;\r\n                         border: 1px solid #fff;\r\n                         transition: .3s all ease;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         width: 100px;\r\n                         padding: 7px;\r\n                         height: 100%;\r\n                    }\r\n                    .btn-letter {\r\n                         background: transparent;\r\n                         box-shadow: none;\r\n                         border: 1px solid #fff;\r\n                         transition: .3s all ease;\r\n                         color: white;\r\n                         font-family: 'Roboto Medium', sans-serif;\r\n                         font-size: 100%;\r\n                         font-weight: lighter;\r\n                         width: 70px;\r\n                         height: 100%;\r\n                         padding: 7px;\r\n                         margin-right: 20px;\r\n                         margin-top: 20px;\r\n                    }\r\n                    //*{ border:2px solid #CD1821 }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// components/LettersComponent.js","import Layout from './Layout.js'\r\nimport React from \"react\";\r\n\r\nexport default class extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <div className=\"group-container\">\r\n                    <label className=\"label-general\">Please wait for the game master to start the game.</label>\r\n                    <img src=\"/static/logo.svg\" className=\"App-logo\" alt=\"logo\"/>\r\n                </div>\r\n                <style jsx>{`\r\n                         #wrapper {\r\n                            background: transparent;\r\n                            display: flex;\r\n                            flex-direction: column;\r\n                            align-items: center;\r\n                            padding: 7px;\r\n                            width: 100%;\r\n                            height: 100%;\r\n                        }\r\n                        .group-container {\r\n                            display: flex;\r\n                            flex-direction: column;\r\n                            width: 100%;\r\n                            padding: 7px;\r\n                        }\r\n                        .label-general {\r\n                            color: white;\r\n                            font-family: 'Roboto Medium', sans-serif;\r\n                            font-size: 100%;\r\n                            font-weight: lighter;\r\n                            text-align: center;\r\n                        }\r\n                        //*{ border:2px solid #CD1821 }\r\n                    `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// components/LoadingScreen.js","import React from 'react'\r\n\r\nexport default class extends React.Component {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// components/Page.js","import data from '../data/dataSource'\r\nimport React from \"react\";\r\n\r\nexport default class extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            name: \"\",\r\n            birthday: \"\",\r\n            favouriteFood: \"\",\r\n            deshu: \"\"\r\n        }\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    handleBirthdayChange = (e) => {\r\n        this.setState({\r\n            birthday: e.target.value\r\n        })\r\n    }\r\n\r\n    handleFavouriteFoodChange = (e) => {\r\n        console.log(e.target)\r\n        this.setState({\r\n            favouriteFood: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDeshuChange = (e) => {\r\n        console.log(e.target)\r\n        this.setState({\r\n            deshu: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <div className=\"form-group-container\">\r\n                    <label className=\"label-general\">Fill in your details below to join the game.</label>\r\n                </div>\r\n                    <div className=\"form-group-container\">\r\n                        <label className=\"label-general\">Name</label>\r\n                        <input onChange={this.handleNameChange} id=\"name\" className=\"input-general\" name=\"name\"/>\r\n                    </div>\r\n                <div className=\"form-group-container\">\r\n                    <label className=\"label-general\">Deshu</label>\r\n                    <select onChange={this.handleDeshuChange} className=\"input-general\" name=\"deshu\">\r\n                        <option className=\"option-general\" disabled selected value>Select your deshu.</option>\r\n                        {data.DESHU_OPTIONS.map(deshu => {\r\n                            return <option className=\"option-general\" value={deshu}>{deshu}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group-container\">\r\n                    <label className=\"label-general\">Birthday</label>\r\n                    <input type=\"date\" onChange={this.handleBirthdayChange} className=\"input-general\" name=\"birthday\"/>\r\n                </div>\r\n                <div className=\"form-group-container\">\r\n                    <label className=\"label-general\">Favourite Food</label>\r\n                    <select onChange={this.handleFavouriteFoodChange} className=\"input-general\" name=\"favouriteFood\">\r\n                        <option className=\"option-general\" disabled selected value>Select your favourite food</option>\r\n                        {data.FOOD_OPTIONS.map(foodOption => { return <option className=\"option-general\" value={foodOption}>{foodOption}</option>})}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group-container\">\r\n                    <button onClick={() => {\r\n                        this.props.onSignIn(\r\n                            this.state.name,\r\n                            this.state.birthday,\r\n                            this.state.favouriteFood,\r\n                            this.state.deshu\r\n                    ) }} type=\"submit\" className=\"btn-submit\">Submit</button>\r\n                </div>\r\n                <style jsx>{`\r\n                    .option-general {\r\n                        color: black;\r\n                    }\r\n                    //  *{ border:2px solid #CD1821 }\r\n                `}</style>\r\n            </div>\r\n            )}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// components/SignIn.js","import React from \"react\";\r\n\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"custom-container\">\r\n                    <label className=\"label-general\">You have entered the correct details! Waiting for other party to verify</label>\r\n                    <img src=\"/static/logo.svg\" className=\"App-logo\" alt=\"logo\"/>\r\n                    <button onClick={this.props.cancel} className=\"btn-cancel\">Cancel</button>\r\n                </div>\r\n                <style jsx>{`\r\n                  .custom-container {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        width: 100%;\r\n                        padding: 7px;\r\n                        align-items: center;\r\n                    }\r\n                    //*{ border:2px solid #CD1821 }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// components/WaitingForVerification.js","const DB_HOST = 'localhost';\r\nconst DB_PORT = 27017;\r\nconst DB_NAME = 'iceBreaker';\r\n\r\nconst PROTOCOL = 'http'\r\nconst HOST = 'localhost';\r\nconst HOST_IP = '127.0.0.1';\r\nconst PORT = 3000;\r\nconst FULL_URI = PROTOCOL + '://' + HOST + ':' + PORT;\r\n\r\nconst COOKIE_DURATION = 30 * 60 * 1000;\r\nconst SESSION_SECRET = 'jakbgakegb545'\r\n\r\nconst NOTIFICATION_TYPE = 'custom'\r\nconst NOTIFICATION_TIMEOUT = 5000\r\nconst NOTIFICATION_BACKGROUND_COLOR = '#0E1717'\r\nconst NOTIFICATION_TEXT_COLOR = '#FFFFFF'\r\n\r\nmodule.exports = {\r\n    DB_NAME,DB_PORT,DB_HOST,FULL_URI,HOST_IP,HOST,PORT,COOKIE_DURATION,SESSION_SECRET,\r\n    NOTIFICATION_TYPE,NOTIFICATION_TIMEOUT,NOTIFICATION_BACKGROUND_COLOR,NOTIFICATION_TEXT_COLOR\r\n}\n\n\n// WEBPACK FOOTER //\n// constants/config.js","const PUSHER_APP_ID = '575034'\r\nconst PUSHER_APP_KEY = '30d8dabc87d7db943336'\r\nconst PUSHER_APP_SECRET = 'ed7e51b094c6d48e5475'\r\nconst PUSHER_APP_CLUSTER = 'ap1'\r\n\r\nmodule.exports = {\r\n    PUSHER_APP_ID,PUSHER_APP_KEY,PUSHER_APP_SECRET,PUSHER_APP_CLUSTER\r\n}\n\n\n// WEBPACK FOOTER //\n// constants/credentials.js","const API_LOGIN_USER = '/loginUser';\r\nconst API_GET_ALL_ACTIVE_USERS = '/getActiveUsers'\r\nconst API_GET_SESSION = '/getSession'\r\nconst API_GET_ASSIGNED_LETTERS = '/getAssignedLetters'\r\nconst API_SUBMIT_EXCHANGE_REQUEST = '/submitExchangeRequest'\r\nconst API_SUBMIT_EXCHANGE_RESPONSE = '/submitExchangeResponse'\r\nconst API_EXCHANGE_COMPLETED = '/exchangeCompleted'\r\nconst API_START_GAME = '/startGame'\r\nconst API_USER_COMPLETED_GAME = '/userCompletedGame'\r\nconst API_CHECK_AUTHENTICATED = '/checkAuthenticated'\r\nconst API_CHECK_GAME_STARTED = '/checkGameStarted'\r\nconst API_STOP_GAME = '/stopGame'\r\nconst API_CANCEL_EXCHANGE = '/cancelExchange'\r\nconst API_GET_COMPLETED_USERS = '/getCompletedUsers'\r\n\r\nmodule.exports={\r\n    API_LOGIN_USER,API_GET_ALL_ACTIVE_USERS,API_GET_SESSION,API_GET_ASSIGNED_LETTERS,\r\n    API_SUBMIT_EXCHANGE_REQUEST,API_EXCHANGE_COMPLETED,API_SUBMIT_EXCHANGE_RESPONSE,API_START_GAME,API_USER_COMPLETED_GAME,\r\n    API_CHECK_AUTHENTICATED,API_CHECK_GAME_STARTED,API_STOP_GAME,API_CANCEL_EXCHANGE,API_GET_COMPLETED_USERS\r\n}\n\n\n// WEBPACK FOOTER //\n// constants/endpoints.js","const PUSHER_CHANNEL = 'iceBreaker'\r\nconst PUSHER_USER_LIST_UPDATE_EVENT = 'update-user-list'\r\nconst PUSHER_GAME_START_EVENT = 'game-start'\r\nconst PUSHER_NEW_EXCHANGE_REQUEST_EVENT = 'new-exchange-request'\r\nconst PUSHER_NEW_EXCHANGE_RESPONSE_EVENT = 'new-exchange-response'\r\nconst EXCHANGE_COMPLETED_EVENT = 'exchange-completed'\r\nconst PUSHER_GAME_STOP_EVENT = 'game-stop'\r\nconst PUSHER_EXCHANGE_CANCELLED_EVENT = 'cancel-exchange'\r\nconst PUSHER_GAME_COMPLETED_EVENT = 'game-completed'\r\n\r\nconst NOTIFICATION_GAME_BEGUN = 'Game has begun!'\r\nconst NOTIFICATION_WRONG_DETAILS = 'You have entered the wrong details! Please try again!'\r\nconst NOTIFICATION_EXCHANGE_SUCCESSFUL = 'Exchange of letters successful!'\r\nconst NOTIFICATION_DUPLICATE_NAME = 'Name has already been taken! Please choose another one!'\r\nconst NOTIFICATION_INCOMPLETE_DETAILS = 'Please fill in all details!'\r\nconst NOTIFICATION_SAME_NAME_SELECTED = 'You are not allowed to exchange with yourself!'\r\nconst NOTIFICATION_GAME_ALREADY_IN_PROGRESS = 'Game already in progress! Please wait to join the next session!'\r\nconst NOTIFICATION_CANCEL_EXCHANGE = 'Exchange has been cancelled by the other party!'\r\nconst NOTIFICATION_GAME_STARTED_SUCCESSFUL = 'Game has been started successfully!'\r\nconst NOTIFICATION_GAME_STARTED_FAILED = 'Failed to start Game!'\r\nconst NOTIFICATION_GAME_STOP_SUCCESSFUL = 'Game has been stopped successfully!'\r\nconst NOTIFICATION_GAME_STOP_FAILED = 'Failed to stop Game!'\r\nconst NOTIFICATION_WRONG_PASSWORD = 'You have entered the wrong password!'\r\nconst NOTIFICATION_GAME_ALREADY_STARTED = 'Game already in progress!'\r\nconst NOTIFICATION_GAME_ALREADY_STOPPED = 'Game already stopped!'\r\n\r\nconst GAME_STATUS_INACTIVE = 'INACTIVE'\r\nconst GAME_STATUS_IN_PROGRESS = 'IN PROGRESS'\r\n\r\nmodule.exports = {\r\n    PUSHER_CHANNEL,PUSHER_USER_LIST_UPDATE_EVENT,PUSHER_NEW_EXCHANGE_REQUEST_EVENT,PUSHER_NEW_EXCHANGE_RESPONSE_EVENT,EXCHANGE_COMPLETED_EVENT,PUSHER_GAME_START_EVENT,\r\n    NOTIFICATION_GAME_BEGUN,NOTIFICATION_WRONG_DETAILS,NOTIFICATION_EXCHANGE_SUCCESSFUL,NOTIFICATION_DUPLICATE_NAME,NOTIFICATION_INCOMPLETE_DETAILS,\r\n    NOTIFICATION_SAME_NAME_SELECTED,PUSHER_GAME_STOP_EVENT,NOTIFICATION_GAME_ALREADY_IN_PROGRESS,PUSHER_EXCHANGE_CANCELLED_EVENT,NOTIFICATION_CANCEL_EXCHANGE,\r\n    NOTIFICATION_GAME_STARTED_SUCCESSFUL,NOTIFICATION_GAME_STARTED_FAILED,NOTIFICATION_GAME_STOP_SUCCESSFUL,NOTIFICATION_GAME_STOP_FAILED,NOTIFICATION_WRONG_PASSWORD,\r\n    NOTIFICATION_GAME_ALREADY_STARTED,NOTIFICATION_GAME_ALREADY_STOPPED,GAME_STATUS_INACTIVE,GAME_STATUS_IN_PROGRESS,PUSHER_GAME_COMPLETED_EVENT\r\n}\n\n\n// WEBPACK FOOTER //\n// constants/strings.js","const FOOD_OPTIONS = ['hokkien mee','laksa','mee rebus'];\r\nconst DESHU_OPTIONS = ['博A','博B','忍','信','公']\r\n\r\nmodule.exports={\r\n    FOOD_OPTIONS, DESHU_OPTIONS\r\n}\n\n\n// WEBPACK FOOTER //\n// data/dataSource.js","export default class {\r\n    constructor(request_user,respond_user,birthday,favouriteFood,deshu,letterToExchange,letterToReceive){\r\n        this.request_user = request_user\r\n        this.respond_user = respond_user\r\n        this.birthday = birthday\r\n        this.favouriteFood = favouriteFood\r\n        this.deshu = deshu\r\n        this.letterToExchange = letterToExchange\r\n        this.letterToReceive = letterToReceive\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// models/ExchangeEntity.js","export default class {\r\n    constructor(name,birthday,deshu,favouriteFood){\r\n        this.name = name\r\n        this.birthday = birthday\r\n        this.favouriteFood = favouriteFood\r\n        this.deshu = deshu\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// models/User.js","import React from \"react\";\r\nimport Pusher from 'pusher-js';\r\nimport User from '../models/User'\r\nimport utils from \"../utils/utils\"\r\nimport Page from '../components/Page';\r\nimport SignIn from \"../components/SignIn\"\r\nimport strings from '../constants/strings'\r\nimport {notify} from \"react-notify-toast\";\r\nimport gameUtils from \"../utils/gameUtils\"\r\nimport Layout from '../components/Layout.js'\r\nimport credentials from '../constants/credentials'\r\nimport LoadingScreen from \"../components/LoadingScreen\"\r\nimport notificationUtils from \"../utils/notificationUtils\"\r\nimport LetterComponent from '../components/LettersComponent'\r\nimport ExchangeRequest from '../components/ExchangeRequest'\r\nimport ExchangeResponse from '../components/ExchangeResponse'\r\nimport WaitingForVerification from '../components/WaitingForVerification'\r\n\r\n\r\nexport default class extends Page {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            userName: \"\",\r\n            activeUsers : [],\r\n            lettersAssigned: [],\r\n            userSelected: '',\r\n            isWaitingForCounterPartyToVerify: true,\r\n            isVerifyingForCounterParty: false,\r\n            isWaitingForGameToStart: false,\r\n            signedIn: true,\r\n            letterToGive: '',\r\n            authenticationChecked: false,\r\n            gameStartedChecked: false\r\n        }\r\n        console.log(\"notify from index is \"+JSON.stringify(notify))\r\n        this.exchangeRequest = {}\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setupPusher()\r\n        this.checkGameState()\r\n        /*\r\n        this.setState({\r\n            signedIn: true,\r\n            authenticationChecked: true,\r\n            gameStartedChecked: true,\r\n            isWaitingForGameToStart: false,\r\n        })*/\r\n    }\r\n\r\n    setupPusher = () => {\r\n        this.pusher = new Pusher(credentials.PUSHER_APP_KEY, {\r\n            cluster: credentials.PUSHER_APP_CLUSTER,\r\n            encrypted: true\r\n        });\r\n\r\n        this.channel = this.pusher.subscribe(strings.PUSHER_CHANNEL);\r\n\r\n        this.channel.bind(strings.PUSHER_USER_LIST_UPDATE_EVENT, (users) => {\r\n            const activeUsers = users.activeUsers\r\n            console.log(\"Received new user list from Pusher: \" + activeUsers)\r\n            var newActiveUsers = activeUsers.map(user => user.name)\r\n            this.setState({\r\n                activeUsers: newActiveUsers\r\n            })\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_NEW_EXCHANGE_REQUEST_EVENT, (exchangeRequest) => {\r\n            console.log(\"Received new exchange request: \" + JSON.stringify(exchangeRequest))\r\n            if (exchangeRequest.respond_user == this.state.userName) {\r\n                console.log(\"Exchange request is for me.\")\r\n                this.exchangeRequest = exchangeRequest\r\n                this.setState({\r\n                    isVerifyingForCounterParty: true\r\n                })\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.EXCHANGE_COMPLETED_EVENT, (data) => {\r\n            if (data.request_user == this.state.userName) {\r\n                notificationUtils.showNotification(strings.NOTIFICATION_EXCHANGE_SUCCESSFUL)\r\n                console.log(\"Exchange request has completed: \" + JSON.stringify(data))\r\n                console.log(\"Letters assigned are now \" + this.state.lettersAssigned)\r\n                this.setState({\r\n                    isWaitingForCounterPartyToVerify: false\r\n                })\r\n                this.retrieveAllGameInformation()\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_GAME_START_EVENT, () => {\r\n            if (this.state.signedIn) {\r\n                console.log(\"Game has started...loading main page...\")\r\n                this.setState({\r\n                    isWaitingForGameToStart: false\r\n                })\r\n                this.retrieveAllGameInformation()\r\n                notificationUtils.showNotification(strings.NOTIFICATION_GAME_BEGUN)\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_GAME_STOP_EVENT, () => {\r\n            if (this.state.signedIn) {\r\n                console.log(\"Received notification to stop the game abruptly!\")\r\n                localStorage.clear()\r\n                this.pusher.disconnect()\r\n                window.alert(\"Game has been forcefully stopped by game master\")\r\n                window.location.href = '/'\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_EXCHANGE_CANCELLED_EVENT, (data) => {\r\n            console.log(\"Received cancel request: \"+JSON.stringify(data))\r\n            if (data.request_user == this.state.userName && this.state.isWaitingForCounterPartyToVerify) {\r\n                this.setState({\r\n                    isWaitingForCounterPartyToVerify: false\r\n                })\r\n                notificationUtils.showNotification(strings.NOTIFICATION_CANCEL_EXCHANGE)\r\n            }\r\n            else if (data.respond_user == this.state.userName && this.state.isVerifyingForCounterParty) {\r\n                this.setState({\r\n                    isVerifyingForCounterParty: false\r\n                })\r\n                notificationUtils.showNotification(strings.NOTIFICATION_CANCEL_EXCHANGE)\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = function(){\r\n            this.pusher.disconnect()\r\n        };\r\n    }\r\n\r\n    checkGameState = () => {\r\n        gameUtils.checkAuthenticated().then((res) => {\r\n            this.setState({\r\n                signedIn: true,\r\n                authenticationChecked: true,\r\n            })\r\n        },(err) => {\r\n            this.setState({\r\n                authenticationChecked: true\r\n            })\r\n        })\r\n\r\n        gameUtils.checkGameStarted().then((res) => {\r\n            this.setState({\r\n                isWaitingForGameToStart: false\r\n            })\r\n            this.retrieveAllGameInformation()\r\n            this.setState({\r\n                gameStartedChecked: true\r\n            })\r\n        },(err) => {\r\n            this.setState({\r\n                gameStartedChecked: true\r\n            })\r\n        })\r\n    }\r\n\r\n    retrieveAllGameInformation = () => {\r\n        this.retriveUserName()\r\n        this.retriveLetters()\r\n        this.retrieveActiveUsers()\r\n    }\r\n\r\n    cancelWaitingForVerification = (r) => {\r\n        this.setState({\r\n            isWaitingForCounterPartyToVerify: false\r\n        })\r\n        gameUtils.cancelExchange(this.exchangeRequest)\r\n    }\r\n\r\n    onExchangeRequestSubmitSuccess = (letterToGive,exchangeRequest) => {\r\n        utils.saveToLocalStorage(exchangeRequest.respond_user,JSON.stringify(exchangeRequest))\r\n        const userSelected = this.state.userSelected\r\n        this.setState({\r\n            isWaitingForCounterPartyToVerify: true,\r\n            letterToGive: letterToGive,\r\n            userSelected: ''\r\n        })\r\n        this.setState({\r\n            userSelected: userSelected\r\n        })\r\n    }\r\n\r\n    onExchangeResponseSubmitSuccess = (exchangeResponse) => {\r\n        notificationUtils.showNotification(strings.NOTIFICATION_EXCHANGE_SUCCESSFUL)\r\n        this.retriveLetters()\r\n        utils.saveToLocalStorage(exchangeResponse.request_user,JSON.stringify(exchangeResponse))\r\n        this.setState({\r\n            isVerifyingForCounterParty: false\r\n        })\r\n    }\r\n\r\n    onGameCompleted = () => {\r\n        this.pusher.disconnect()\r\n    }\r\n\r\n    onUserSelected = (e) => {\r\n        if(this.state.activeUsers[e.target.id] === this.state.userName)\r\n            notificationUtils.showNotification(strings.NOTIFICATION_SAME_NAME_SELECTED)\r\n        else {\r\n            console.log(\"Setting user selected to \" + e.target.id)\r\n            this.setState({\r\n                userSelected: this.state.activeUsers[e.target.id]\r\n            })\r\n        }\r\n    }\r\n\r\n    retriveLetters = () => {\r\n        gameUtils.getAssignedLetters().then((letters) => {\r\n            this.setState({\r\n                lettersAssigned : letters\r\n            })\r\n        },function(err){})\r\n    }\r\n\r\n    retrieveActiveUsers = () => {\r\n        gameUtils.getActiveUsers().then((activeUsers) => {\r\n            this.setState({\r\n                activeUsers : activeUsers\r\n            })\r\n        },function(err){})\r\n    }\r\n\r\n    retriveUserName = () => {\r\n        gameUtils.getUserName().then((userName) => {\r\n            this.setState({\r\n                userName: userName\r\n            })\r\n        },function(err){})\r\n    }\r\n\r\n    cancelRespondToRequester = () => {\r\n        this.setState({\r\n            isVerifyingForCounterParty: false\r\n        })\r\n        gameUtils.cancelExchange(this.exchangeRequest)\r\n    }\r\n\r\n    onSignIn = (name,birthday,favouriteFood,deshu) => {\r\n        name = name.toUpperCase()\r\n        console.log(\"Signing in...\"+name)\r\n        const user = new User(name,birthday,deshu,favouriteFood)\r\n        gameUtils.loginUser(user).then((succeed)=>{\r\n            this.setState({\r\n                signedIn: true\r\n            })\r\n        },function(errMessage){\r\n            notificationUtils.showNotification(errMessage)\r\n        })\r\n    }\r\n\r\n    updateExchangeRequest = (exchangeRequest) => {\r\n        this.exchangeRequest = exchangeRequest\r\n    }\r\n\r\n    render(){\r\n        if(!this.state.authenticationChecked || !this.state.gameStartedChecked)\r\n            return(\r\n                <Layout>\r\n                </Layout>\r\n            )\r\n        else if(!this.state.signedIn)\r\n            return(\r\n                <Layout>\r\n                    <div id=\"signIn\">\r\n                        <SignIn onSignIn={this.onSignIn}/>\r\n                    </div>\r\n                </Layout>\r\n            )\r\n        else if (this.state.isWaitingForGameToStart && this.state.signedIn)\r\n            return(\r\n                <Layout>\r\n                    <LoadingScreen/>\r\n                </Layout>\r\n            )\r\n        if (this.state.isWaitingForCounterPartyToVerify)\r\n            return(\r\n                <Layout>\r\n                    <WaitingForVerification cancel={this.cancelWaitingForVerification}/>\r\n                </Layout>\r\n            )\r\n        else if(this.state.isVerifyingForCounterParty)\r\n            return(\r\n                <Layout>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-general\">{this.exchangeRequest.request_user} has requested to connect.Please fill in his details below.</label>\r\n                    </div>\r\n                    <ExchangeResponse\r\n                        targetUser={this.exchangeRequest.request_user}\r\n                        userName={this.exchangeRequest.request_user}\r\n                        onExchangeResponseSubmitSuccess={this.onExchangeResponseSubmitSuccess}\r\n                        lettersAvailable={this.state.lettersAssigned}\r\n                        exchangeRequest={this.exchangeRequest}/>\r\n                    <button onClick={this.cancelRespondToRequester} className=\"btn-cancel\">Cancel</button>\r\n                </Layout>\r\n            )\r\n        else\r\n            return(\r\n                <Layout>\r\n                    <div id=\"wrapper\">\r\n                        <div id=\"sidebar-wrapper\">\r\n                            <nav id=\"spy\">\r\n                                <ul className=\"sidebar-nav nav\">\r\n                                    {this.state.activeUsers.map((user,index) => {\r\n                                        return <li id={index} className=\"sidebar-brand\" onClick={this.onUserSelected}>{user}</li>\r\n                                    })}\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                        <div id=\"page-content-wrapper\">\r\n                            <div className=\"page-content inset\" data-spy=\"scroll\" data-target=\"#spy\">\r\n                                <LetterComponent onGameCompleted={this.onGameCompleted} userName={this.state.userName} lettersAssigned={this.state.lettersAssigned}/>\r\n                                <div style={{marginTop:'50px',marginBottom:'50px'}} className=\"form-group\">\r\n                                    <label className=\"label-general\">Fill in the details of the player you would like to exchange with below.</label>\r\n                                </div>\r\n                                <ExchangeRequest\r\n                                    targetUser={this.state.userSelected}\r\n                                    userName={this.state.userName}\r\n                                    onExchangeRequestSubmitSuccess={this.onExchangeRequestSubmitSuccess}\r\n                                    userSelected={this.state.userSelected}\r\n                                    lettersAvailable={this.state.lettersAssigned}\r\n                                    updateExchangeRequest={this.updateExchangeRequest}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <style jsx>{`\r\n                    #signIn {\r\n                        background-color: black\r\n                       }\r\n                    #wrapper.active {\r\n                      padding-left: 0;\r\n                    }\r\n                    #wrapper.active #sidebar-wrapper {\r\n                      left: 0;\r\n                    }\r\n                    #page-content-wrapper {\r\n                      width: 100%;\r\n                    }\r\n                    .sidebar-nav li {\r\n                      line-height: 40px;\r\n                      text-indent: 20px;\r\n                    }\r\n                    .sidebar-nav li a {\r\n                      color: #999999;\r\n                      display: block;\r\n                      text-decoration: none;\r\n                      padding-left: 60px;\r\n                    }\r\n                    .sidebar-nav li a span:before {\r\n                      position: absolute;\r\n                      left: 0;\r\n                      color: #41484c;\r\n                      text-align: center;\r\n                      width: 20px;\r\n                      line-height: 18px;\r\n                    }\r\n                    .sidebar-nav li a:hover,\r\n                    .sidebar-nav li.active {\r\n                      color: #fff;\r\n                      background: rgba(255,255,255,0.2);\r\n                      text-decoration: none;\r\n                    }\r\n                    .sidebar-nav li a:active,\r\n                    .sidebar-nav li a:focus {\r\n                      text-decoration: none;\r\n                    }\r\n                    .sidebar-nav > .sidebar-brand a {\r\n                      color: #999999;\r\n                    }\r\n                    .sidebar-nav > .sidebar-brand a:hover {\r\n                      color: #fff;\r\n                      background: none;\r\n                    }\r\n                    .inset {\r\n                      padding: 20px;\r\n                    }\r\n\r\n                    @media (min-width:1224px) {\r\n                        #wrapper {\r\n                          padding-left: 250px;\r\n                          transition: all 0.4s ease 0s;\r\n                        }\r\n                        #sidebar-wrapper {\r\n                          margin-left: -250px;\r\n                          left: 250px;\r\n                          width: 250px;\r\n                          background: linear-gradient(#000000, #3300CC);\r\n                          font-family: 'Roboto Medium', sans-serif;\r\n                          font-size: 100%;\r\n                          font-weight: lighter;\r\n                          position: fixed;\r\n                          height: 100%;\r\n                          overflow-y: auto;\r\n                          z-index: 1000;\r\n                          transition: all 0.4s ease 0s;\r\n                          color: white;\r\n                        }\r\n\r\n                        .sidebar-nav > .sidebar-brand {\r\n                          height: 65px;\r\n                          line-height: 60px;\r\n                          font-size: 18px;\r\n                        }\r\n\r\n                        .sidebar-nav {\r\n                          position: absolute;\r\n                          top: 0;\r\n                          width: 250px;\r\n                          list-style: none;\r\n                          margin: 0;\r\n                          padding: 0;\r\n                        }\r\n\r\n                    }\r\n\r\n                    @media (max-width:1224px) {\r\n                        #wrapper {\r\n                          padding-left: 100px;\r\n                          transition: all 0.4s ease 0s;\r\n                        }\r\n                        #sidebar-wrapper {\r\n                          margin-left: -100px;\r\n                          left: 100px;\r\n                          width: 100px;\r\n                          background: linear-gradient(#000000, #3300CC);\r\n                          font-family: 'Roboto Medium', sans-serif;\r\n                          font-size: 100%;\r\n                          font-weight: lighter;\r\n                          position: fixed;\r\n                          height: 100%;\r\n                          overflow-y: auto;\r\n                          z-index: 1000;\r\n                          transition: all 0.4s ease 0s;\r\n                          color: white;\r\n                        }\r\n\r\n                        .sidebar-nav > .sidebar-brand {\r\n                          height: 65px;\r\n                          line-height: 60px;\r\n                          font-size: 10px;\r\n                        }\r\n\r\n                        .sidebar-nav {\r\n                          position: absolute;\r\n                          top: 0;\r\n                          width: 100px;\r\n                          list-style: none;\r\n                          margin: 0;\r\n                          padding: 0;\r\n                        }\r\n\r\n                    }\r\n\r\n                    `}</style>\r\n                </Layout>\r\n            )\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/index.js","const axios = require(\"axios\");\r\nconst strings = require(\"../constants/strings\")\r\nconst endpoints = require(\"../constants/endpoints\");\r\n\r\nmodule.exports = {\r\n\r\n    sendExchangeRequest(exchangeRequest){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_SUBMIT_EXCHANGE_REQUEST,\r\n                data: exchangeRequest\r\n            })\r\n            .then((response) => {\r\n                console.log('Response of ExchangeRequest: ' + JSON.stringify(response.data))\r\n                if (response.data.success == 1) {\r\n                    resolve(1)\r\n                }\r\n                else\r\n                    reject(strings.NOTIFICATION_WRONG_DETAILS)\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n        })\r\n    },\r\n\r\n    sendExchangeResponse(exchangeResponse){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_SUBMIT_EXCHANGE_RESPONSE,\r\n                data: exchangeResponse\r\n            })\r\n            .then((response) => {\r\n                console.log('Response of ExchangeResponse: '+JSON.stringify(response.data))\r\n                if(response.data.success == 1)\r\n                    resolve(exchangeResponse)\r\n                else\r\n                    reject(strings.NOTIFICATION_WRONG_DETAILS)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    getAssignedLetters(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_GET_ASSIGNED_LETTERS\r\n            })\r\n            .then((response) => {\r\n                const letters = response.data\r\n                console.log('Got letters assigned as '+letters)\r\n                resolve(letters)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    getCompletedUsers(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_GET_COMPLETED_USERS\r\n            })\r\n            .then((response) => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    getActiveUsers(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_GET_ALL_ACTIVE_USERS\r\n            })\r\n            .then((response) => {\r\n                const activeUsers = response.data.map(session => session.user.name)\r\n                console.log('Parsed active users as '+activeUsers)\r\n                resolve(activeUsers)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    getUserName(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_GET_SESSION\r\n            })\r\n            .then((response) => {\r\n                const userName = response.data.user.name\r\n                if (typeof response.data.user === 'undefined')\r\n                    reject(0)\r\n                console.log('Received username as  '+userName)\r\n                resolve(userName)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    loginUser(user){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_LOGIN_USER,\r\n                data: user\r\n            })\r\n            .then((response) => {\r\n                if(response.data.result == 1)\r\n                    resolve(1)\r\n                else\r\n                    reject(response.data.message)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    startGame(password){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_START_GAME,\r\n                data: {password: password}\r\n            })\r\n            .then((response) => {\r\n                if(response.data.success == 1)\r\n                    resolve(strings.NOTIFICATION_GAME_STARTED_SUCCESSFUL)\r\n                else\r\n                    reject(response.data.message)\r\n            })\r\n            .catch(function (err) {\r\n                reject(strings.NOTIFICATION_GAME_STARTED_FAILED)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    stopGame(password){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_STOP_GAME,\r\n                data: {password: password}\r\n            })\r\n            .then((response) => {\r\n                if(response.data.success == 1)\r\n                    resolve(strings.NOTIFICATION_GAME_STOP_SUCCESSFUL)\r\n                else\r\n                    reject(response.data.message)\r\n            })\r\n            .catch(function (err) {\r\n                reject(strings.NOTIFICATION_GAME_STOP_FAILED)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    completeGame(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_USER_COMPLETED_GAME\r\n            })\r\n            .then((response) => {\r\n                resolve(1)\r\n            })\r\n            .catch(function (err) {\r\n                reject(err)\r\n                console.log(err);\r\n            });\r\n        })\r\n    },\r\n\r\n    checkAuthenticated(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_CHECK_AUTHENTICATED\r\n            })\r\n            .then((response) => {\r\n                if(response.data.result == 1)\r\n                    resolve(true)\r\n                else\r\n                    reject(false)\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                reject(false)\r\n            });\r\n        });\r\n    },\r\n\r\n    checkGameStarted(){\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoints.API_CHECK_GAME_STARTED\r\n            })\r\n            .then((response) => {\r\n                if(response.data.result == 1)\r\n                    resolve(true)\r\n                else\r\n                    reject(false)\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                reject(false)\r\n            });\r\n        });\r\n    },\r\n\r\n    validateUserInfo(store,exchange,targetUser){\r\n        return new Promise((resolve, reject) => {\r\n            store.all(function (err, sessions) {\r\n                var filteredSessions = sessions.filter(function (session) {\r\n                    if (session.hasOwnProperty('user'))\r\n                        return (session.user.name == targetUser &&\r\n                            session.user.birthday == exchange.birthday &&\r\n                            session.user.favouriteFood == exchange.favouriteFood &&\r\n                            session.user.deshu == exchange.deshu &&\r\n                            exchange.letterToExchange\r\n                        )\r\n                    else\r\n                        return false\r\n                })\r\n                console.log(\"filtered sessions \"+JSON.stringify(filteredSessions))\r\n                if (filteredSessions.length > 0)\r\n                    resolve(true)\r\n                else\r\n                    reject(false)\r\n            })\r\n        })\r\n    },\r\n\r\n    cancelExchange(exchangeRequest){\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_CANCEL_EXCHANGE,\r\n            data: exchangeRequest\r\n        })\r\n        .then((response) => {\r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// utils/gameUtils.js","const notify = require(\"react-notify-toast\").notify;\r\nconst config = require(\"../constants/config\");\r\n\r\nconsole.log(\"Notify is \"+JSON.stringify(notify))\r\n\r\nmodule.exports = {\r\n\r\n    showNotification(message){\r\n        notify.show(\r\n            message,\r\n            config.NOTIFICATION_TYPE,\r\n            config.NOTIFICATION_TIMEOUT,\r\n            {\r\n                background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                text: config.NOTIFICATION_TEXT_COLOR\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// utils/notificationUtils.js","\r\nmodule.exports = {\r\n\r\n    insertLetter(lettersUsed,letterToInsert){\r\n        const index = lettersUsed.findIndex('-')\r\n    },\r\n\r\n    shuffleString(input){\r\n        var a = input.split(\"\"),\r\n            n = a.length;\r\n\r\n        for(var i = n - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var tmp = a[i];\r\n            a[i] = a[j];\r\n            a[j] = tmp;\r\n        }\r\n        return a.join(\"\");\r\n    },\r\n\r\n    saveToLocalStorage(key,value){\r\n        if(typeof localStorage !== 'undefined') {\r\n            console.log(\"Setting local storage \"+key+\":\"+value)\r\n            localStorage.setItem(key, value)\r\n        }\r\n    },\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// utils/utils.js","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = axios\n// module chunks = 3","module.exports = require(\"next/head\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/head\"\n// module id = next/head\n// module chunks = 3","module.exports = require(\"pusher-js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pusher-js\"\n// module id = pusher-js\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 3","module.exports = require(\"react-notify-toast\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-notify-toast\"\n// module id = react-notify-toast\n// module chunks = 3","module.exports = require(\"reactstrap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"reactstrap\"\n// module id = reactstrap\n// module chunks = 3","module.exports = require(\"styled-jsx/style\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"styled-jsx/style\"\n// module id = styled-jsx/style\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AAAA;AACA;AADA;AAGA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AAAA;AACA;AADA;AAGA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AAAA;AACA;AADA;AAGA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AACA;AAAA;AACA;AADA;AAGA;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2DA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAzEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAwDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3HA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;;;;;AAxBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;;;;;AAvBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;;;;;;;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A;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;;;;;;;AC7BA;AACA;AAEA;AACA;AAAA;AADA;;;;;;;;;;;ACFA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAiCA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmHA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AA3IA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8IA;AACA;AAAA;AACA;AAAA;AACA;AAjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoJA;AACA;AADA;AACA;AAEA;AACA;AAxJA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2JA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AADA;AAGA;AArKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AA9KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiLA;AACA;AAlLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqLA;AAGA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA7LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgMA;AACA;AACA;AADA;AAGA;AACA;AArMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwMA;AACA;AACA;AADA;AAGA;AACA;AA7MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgNA;AACA;AACA;AADA;AAGA;AACA;AArNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwNA;AACA;AADA;AACA;AAEA;AACA;AA5NA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+NA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAzOA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4OA;AACA;AA7OA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAhBA;AAkBA;AACA;;;AACA;AACA;AACA;AACA;;;;;;;AAOA;;;AAijBA;AAAA;AAAA;AA8JA;;;;AA1bA;AACA;;;;;;;;ACpBA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;AAvQA;;;;;;;ACJA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AAFA;AAIA;AAXA;;;;;;;ACJA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAxBA;;;;;;;;;;;;;;;ACDA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}