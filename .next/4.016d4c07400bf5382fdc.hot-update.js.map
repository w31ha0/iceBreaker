{"version":3,"file":"4.016d4c07400bf5382fdc.hot-update.js","sources":["webpack:///pages/admin.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport Page from '../components/Page';\r\nimport Layout from '../components/Layout.js'\r\nimport endpoints from \"../constants/endpoints\";\r\nimport {notify} from \"react-notify-toast\";\r\nimport config from \"../constants/config\";\r\nimport strings from '../constants/strings'\r\nimport Pusher from \"pusher-js\";\r\nimport credentials from \"../constants/credentials\";\r\nimport utils from \"../utils/utils\"\r\n\r\nexport default class extends Page{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            password:'',\r\n            activeUsers: [],\r\n            gameStatus: 'INACTIVE'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setupPusher()\r\n        this.retrieveActiveUsers()\r\n        this.retrieveGameStatus()\r\n    }\r\n\r\n    retrieveGameStatus(){\r\n        utils.checkGameStarted().then(function(success){\r\n            this.setState({\r\n                gameStatus: 'IN PROGRESS'\r\n            })\r\n        },function(failure){\r\n            this.setState({\r\n                gameStatus: 'INACTIVE'\r\n            })\r\n        })\r\n    }\r\n\r\n    retrieveActiveUsers = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_GET_ALL_ACTIVE_USERS\r\n        })\r\n        .then((response) => {\r\n            const activeUsers = response.data.map(session => session.user.name)\r\n            console.log('Parsed active users as '+activeUsers)\r\n            this.setState({\r\n                activeUsers : activeUsers\r\n            })\r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    setupPusher = () => {\r\n        this.pusher = new Pusher(credentials.PUSHER_APP_KEY, {\r\n            cluster: credentials.PUSHER_APP_CLUSTER,\r\n            encrypted: true\r\n        });\r\n\r\n        this.channel = this.pusher.subscribe(strings.PUSHER_CHANNEL);\r\n\r\n        this.channel.bind(strings.PUSHER_USER_LIST_UPDATE_EVENT, (users) => {\r\n            console.log(\"Received new user list from Pusher: \" + users)\r\n            var newActiveUsers = users.map(user => user.name)\r\n            this.setState({\r\n                activeUsers: newActiveUsers\r\n            })\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_GAME_START_EVENT, (users) => {\r\n            this.setState({\r\n                gameStatus: 'IN PROGRESS'\r\n            })\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_GAME_STOP_EVENT, (users) => {\r\n            this.setState({\r\n                gameStatus: 'INACTIVE'\r\n            })\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    startGame = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_START_GAME,\r\n            data: {password: this.state.password}\r\n        })\r\n        .then((response) => {\r\n            console.log('Got start game result '+response.data.success)\r\n            notify.show(\r\n                strings.NOTIFICATION_GAME_STARTED_SUCCESSFUL,\r\n                config.NOTIFICATION_TYPE,\r\n                config.NOTIFICATION_TIMEOUT,\r\n                {\r\n                    background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                    text: config.NOTIFICATION_TEXT_COLOR\r\n                });\r\n        })\r\n        .catch(function (response) {\r\n            notify.show(\r\n                strings.NOTIFICATION_GAME_STARTED_FAILED,\r\n                config.NOTIFICATION_TYPE,\r\n                config.NOTIFICATION_TIMEOUT,\r\n                {\r\n                    background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                    text: config.NOTIFICATION_TEXT_COLOR\r\n                });\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    stopGame = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_STOP_GAME,\r\n            data: {password: this.state.password}\r\n        })\r\n        .then((response) => {\r\n            console.log('Got start game result '+response.data.success)\r\n            notify.show(\r\n                strings.NOTIFICATION_GAME_STOP_SUCCESSFUL,\r\n                config.NOTIFICATION_TYPE,\r\n                config.NOTIFICATION_TIMEOUT,\r\n                {\r\n                    background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                    text: config.NOTIFICATION_TEXT_COLOR\r\n                });\r\n        })\r\n        .catch(function (response) {\r\n            notify.show(\r\n                strings.NOTIFICATION_GAME_STOP_FAILED,\r\n                config.NOTIFICATION_TYPE,\r\n                config.NOTIFICATION_TIMEOUT,\r\n                {\r\n                    background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                    text: config.NOTIFICATION_TEXT_COLOR\r\n                });\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Layout>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input onChange={this.handlePasswordChange} className=\"form-control\" name=\"name\"/>\r\n                </div>\r\n                <div>\r\n                    <button id='start-button' onClick={this.startGame} type=\"submit\" className=\"btn btn-primary\">Start Game</button>\r\n                    <button id='stop-button' onClick={this.stopGame} className=\"btn btn-danger\">Stop Game</button>\r\n                </div>\r\n                <div id=\"game-status\">\r\n                    <label>Current Game Status: {this.state.gameStatus}</label>\r\n                </div>\r\n                <div id='players'>\r\n                    <label>Current players in session</label>\r\n                    <ul className=\"list-group\">\r\n                        {this.state.activeUsers.map((user,index) => {\r\n                            return <li className=\"list-group-item\">{user}</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <style jsx>{`\r\n                    #start-button {\r\n                        margin-right: 15px;\r\n                    }\r\n                    #players {\r\n                        margin-top: 15px;\r\n                    }\r\n                    #game-status{\r\n                        margn\r\n                    }\r\n                `}</style>\r\n            </Layout>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/admin.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2EA;AACA;AADA;AAGA;AA9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiFA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAKA;AACA;AAFA;AAIA;AAEA;AAKA;AACA;AAFA;AAIA;AACA;AACA;AA5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+GA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAKA;AACA;AAFA;AAIA;AAEA;AAKA;AACA;AAFA;AAIA;AACA;AACA;AA1IA;AAEA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;;;AAmHA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAiCA;;;;AAjLA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}