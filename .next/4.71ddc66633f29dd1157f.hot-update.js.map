{"version":3,"file":"4.71ddc66633f29dd1157f.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import axios from 'axios'\r\nimport React from \"react\";\r\nimport Pusher from 'pusher-js';\r\nimport utils from '../utils/utils'\r\nimport Page from '../components/Page';\r\nimport config from '../constants/config'\r\nimport SignIn from \"../components/SignIn\"\r\nimport strings from '../constants/strings'\r\nimport {notify} from \"react-notify-toast\";\r\nimport MediaQuery from 'react-responsive';\r\nimport Layout from '../components/Layout.js'\r\nimport endpoints from '../constants/endpoints'\r\nimport credentials from '../constants/credentials'\r\nimport LoadingScreen from \"../components/LoadingScreen\"\r\nimport LetterComponent from '../components/LettersComponent'\r\nimport ExchangeRequest from '../components/ExchangeRequest'\r\nimport ExchangeResponse from '../components/ExchangeResponse'\r\nimport WaitingForVerification from '../components/WaitingForVerification'\r\n\r\nexport default class extends Page {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            userName: \"\",\r\n            activeUsers : [\"LEW WEI HAO\",\"TAN YI KAN\"],\r\n            lettersAssigned: [],\r\n            userSelected: '',\r\n            isWaitingForCounterPartyToVerify: false,\r\n            isVerifyingForCounterParty: false,\r\n            isWaitingForGameToStart: true,\r\n            signedIn: false,\r\n            letterToGive: '',\r\n            authenticationChecked: false,\r\n            gameStartedChecked: false\r\n        }\r\n        this.exchangeRequest = {}\r\n\r\n    }\r\n\r\n    async componentDidMount(){\r\n        screen.orientation.lock('landscape');\r\n        this.setupPusher()\r\n        this.checkGameState()\r\n\r\n\r\n        this.setState({\r\n            signedIn: true,\r\n            authenticationChecked: true,\r\n            gameStartedChecked: true,\r\n            isWaitingForGameToStart: false,\r\n        })\r\n    }\r\n\r\n    setupPusher = () => {\r\n        this.pusher = new Pusher(credentials.PUSHER_APP_KEY, {\r\n            cluster: credentials.PUSHER_APP_CLUSTER,\r\n            encrypted: true\r\n        });\r\n\r\n        this.channel = this.pusher.subscribe(strings.PUSHER_CHANNEL);\r\n\r\n        this.channel.bind(strings.PUSHER_USER_LIST_UPDATE_EVENT, (users) => {\r\n            console.log(\"Received new user list from Pusher: \"+users)\r\n            var newActiveUsers = users.map(user => user.name)\r\n            this.setState({\r\n                activeUsers: newActiveUsers\r\n            })\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_NEW_EXCHANGE_REQUEST_EVENT, (exchangeRequest) => {\r\n            console.log(\"Received new exchange request: \"+JSON.stringify(exchangeRequest))\r\n            if(exchangeRequest.respond_user == this.state.userName){\r\n                console.log(\"Exchange request is for me.\")\r\n                this.exchangeRequest = exchangeRequest\r\n                this.setState({\r\n                    isVerifyingForCounterParty: true\r\n                })\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.EXCHANGE_COMPLETED_EVENT, (data) => {\r\n            if(data.request_user == this.state.userName){\r\n                notify.show(\r\n                    strings.NOTIFICATION_EXCHANGE_SUCCESSFUL,\r\n                    config.NOTIFICATION_TYPE, config.NOTIFICATION_TIMEOUT,\r\n                    {\r\n                        background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                        text: config.NOTIFICATION_TEXT_COLOR\r\n                    });\r\n                console.log(\"Exchange request has completed: \"+JSON.stringify(data))\r\n                console.log(\"Letters assigned are now \"+this.state.lettersAssigned)\r\n                this.setState({\r\n                    isWaitingForCounterPartyToVerify: false\r\n                })\r\n                this.retrieveAllGameInformation()\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_GAME_START_EVENT, () => {\r\n            if(this.state.signedIn) {\r\n                console.log(\"Game has started...loading main page...\")\r\n                this.setState({\r\n                    isWaitingForGameToStart: false\r\n                })\r\n                this.retrieveAllGameInformation()\r\n                notify.show(\r\n                    strings.NOTIFICATION_GAME_BEGUN,\r\n                    config.NOTIFICATION_TYPE, config.NOTIFICATION_TIMEOUT,\r\n                    {\r\n                        background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                        text: config.NOTIFICATION_TEXT_COLOR\r\n                    });\r\n            }\r\n        });\r\n\r\n        this.channel.bind(strings.PUSHER_GAME_STOP_EVENT, () => {\r\n            if(this.state.signedIn){\r\n                window.alert(\"Game has been forcefully stopped by game master\")\r\n                window.location.href = '/'\r\n            }\r\n        });\r\n    }\r\n\r\n    checkGameState = () => {\r\n        utils.checkAuthenticated().then((res) => {\r\n            this.setState({\r\n                signedIn: true,\r\n                authenticationChecked: true,\r\n            })\r\n        },(err) => {\r\n            this.setState({\r\n                authenticationChecked: true\r\n            })\r\n        })\r\n\r\n        utils.checkGameStarted().then((res) => {\r\n            this.setState({\r\n                isWaitingForGameToStart: false\r\n            })\r\n            this.retrieveAllGameInformation()\r\n            this.setState({\r\n                gameStartedChecked: true\r\n            })\r\n        },(err) => {\r\n            this.setState({\r\n                gameStartedChecked: true\r\n            })\r\n        })\r\n    }\r\n\r\n    retrieveAllGameInformation = () => {\r\n        this.retriveUserName()\r\n        this.retriveLetters()\r\n        this.retrieveActiveUsers()\r\n    }\r\n\r\n    cancelWaitingForVerification = (r) => {\r\n        this.setState({\r\n            isWaitingForCounterPartyToVerify: false\r\n        })\r\n    }\r\n\r\n    onExchangeRequestSubmitSuccess = (letterToGive) => {\r\n        this.setState({\r\n            isWaitingForCounterPartyToVerify: true,\r\n            letterToGive: letterToGive\r\n        })\r\n    }\r\n\r\n    onExchangeResponseSubmitSuccess = () => {\r\n        notify.show(\r\n            strings.NOTIFICATION_EXCHANGE_SUCCESSFUL,\r\n            config.NOTIFICATION_TYPE, config.NOTIFICATION_TIMEOUT,\r\n            {\r\n                background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                text: config.NOTIFICATION_TEXT_COLOR\r\n            });\r\n        this.setState({\r\n            isVerifyingForCounterParty: false\r\n        })\r\n        this.retriveLetters()\r\n    }\r\n\r\n    onUserSelected = (e) => {\r\n        if(this.state.activeUsers[e.target.id] === this.state.userName)\r\n            notify.show(\r\n                strings.NOTIFICATION_SAME_NAME_SELECTED,\r\n                config.NOTIFICATION_TYPE, config.NOTIFICATION_TIMEOUT,\r\n                {\r\n                    background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                    text: config.NOTIFICATION_TEXT_COLOR\r\n                });\r\n        else {\r\n            console.log(\"Setting user selected to \" + e.target.id)\r\n            this.setState({\r\n                userSelected: this.state.activeUsers[e.target.id]\r\n            })\r\n        }\r\n    }\r\n\r\n    retriveLetters = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_GET_ASSIGNED_LETTERS\r\n        })\r\n        .then((response) => {\r\n            console.log('Got letters assigned as '+response.data)\r\n            this.setState({\r\n                lettersAssigned : response.data\r\n            })\r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    retrieveActiveUsers = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_GET_ALL_ACTIVE_USERS\r\n        })\r\n        .then((response) => {\r\n            const activeUsers = response.data.map(session => session.user.name)\r\n            console.log('Parsed active users as '+activeUsers)\r\n            this.setState({\r\n                activeUsers : activeUsers\r\n            })\r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    retriveUserName = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_GET_SESSION\r\n        })\r\n        .then((response) => {\r\n            if (typeof response.data.user === 'undefined')\r\n                return\r\n            console.log('Received username as  '+response.data.user.name)\r\n            this.setState({\r\n                userName : response.data.user.name\r\n            })\r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    cancelRespondToRequester = () => {\r\n        this.setState({\r\n            isVerifyingForCounterParty: false\r\n        })\r\n    }\r\n\r\n    onSignIn = (name,birthday,favouriteFood,deshu) => {\r\n        name = name.toUpperCase()\r\n        console.log(\"Signing in...\"+name)\r\n        axios({\r\n            method: 'post',\r\n            url: endpoints.API_LOGIN_USER,\r\n            data: {\r\n                    name: name,\r\n                    birthday: birthday,\r\n                    favouriteFood: favouriteFood,\r\n                    deshu: deshu\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.data.result == 1)\r\n                this.setState({\r\n                    signedIn: true\r\n                })\r\n            else\r\n                notify.show(\r\n                    response.data.message,\r\n                    config.NOTIFICATION_TYPE,\r\n                    config.NOTIFICATION_TIMEOUT,\r\n                    {\r\n                        background: config.NOTIFICATION_BACKGROUND_COLOR,\r\n                        text: config.NOTIFICATION_TEXT_COLOR\r\n                    });\r\n        })\r\n        .catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(!this.state.authenticationChecked || !this.state.gameStartedChecked)\r\n            return(\r\n                <Layout>\r\n                </Layout>\r\n            )\r\n        else if(!this.state.signedIn)\r\n            return(\r\n                <Layout>\r\n                    <SignIn onSignIn={this.onSignIn}/>\r\n                </Layout>\r\n            )\r\n        else if (this.state.isWaitingForGameToStart && this.state.signedIn)\r\n            return(\r\n                <Layout>\r\n                    <LoadingScreen/>\r\n                </Layout>\r\n            )\r\n        if (this.state.isWaitingForCounterPartyToVerify)\r\n            return(\r\n                <Layout>\r\n                    <WaitingForVerification cancel={this.cancelWaitingForVerification}/>\r\n                </Layout>\r\n            )\r\n        else if(this.state.isVerifyingForCounterParty)\r\n            return(\r\n                <Layout>\r\n                    <div className=\"form-group\">\r\n                        <label>{this.exchangeRequest.request_user} has requested to connect.Please fill in his details below.</label>\r\n                    </div>\r\n                    <ExchangeResponse\r\n                        targetUser={this.exchangeRequest.request_user}\r\n                        userName={this.exchangeRequest.request_user}\r\n                        onExchangeResponseSubmitSuccess={this.onExchangeResponseSubmitSuccess}\r\n                        lettersAvailable={this.state.lettersAssigned}\r\n                        exchangeRequest={this.exchangeRequest}/>\r\n                    <div id='cancel-button'>\r\n                        <button onClick={this.cancelRespondToRequester} className=\"btn btn-danger\">Cancel</button>\r\n                    </div>\r\n                </Layout>\r\n            )\r\n        else\r\n            return(\r\n                <Layout>\r\n                    <div id=\"wrapper\">\r\n                        <div id=\"sidebar-wrapper\">\r\n                            <nav id=\"spy\">\r\n                                <ul className=\"sidebar-nav nav\">\r\n                                    {this.state.activeUsers.map((user,index) => {\r\n                                        return <li id={index} className=\"sidebar-brand\" onClick={this.onUserSelected}>{user}</li>\r\n                                    })}\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                        <div id=\"page-content-wrapper\">\r\n                            <div className=\"page-content inset\" data-spy=\"scroll\" data-target=\"#spy\">\r\n                                <LetterComponent userName={this.state.userName} lettersAssigned={this.state.lettersAssigned}/>\r\n                                <div style={{marginTop:'50px',marginBottom:'50px'}} className=\"form-group\">\r\n                                    <label>Fill in the details of the player you would like to exchange with.</label>\r\n                                </div>\r\n                                <ExchangeRequest\r\n                                    targetUser={this.state.userSelected}\r\n                                    userName={this.state.userName}\r\n                                    onExchangeRequestSubmitSuccess={this.onExchangeRequestSubmitSuccess}\r\n                                    userSelected={this.state.userSelected}\r\n                                    lettersAvailable={this.state.lettersAssigned}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <style jsx>{`\r\n                    @media (min-width:1224px) {\r\n                        #wrapper {\r\n                          padding-left: 250px;\r\n                          transition: all 0.4s ease 0s;\r\n                        }\r\n                        #sidebar-wrapper {\r\n                          margin-left: -250px;\r\n                          left: 250px;\r\n                          width: 250px;\r\n                          background: #000;\r\n                          position: fixed;\r\n                          height: 100%;\r\n                          overflow-y: auto;\r\n                          z-index: 1000;\r\n                          transition: all 0.4s ease 0s;\r\n                          color: white;\r\n                        }\r\n                        #wrapper.active {\r\n                          padding-left: 0;\r\n                        }\r\n                        #wrapper.active #sidebar-wrapper {\r\n                          left: 0;\r\n                        }\r\n                        #page-content-wrapper {\r\n                          width: 100%;\r\n                        }\r\n                        .sidebar-nav {\r\n                          position: absolute;\r\n                          top: 0;\r\n                          width: 250px;\r\n                          list-style: none;\r\n                          margin: 0;\r\n                          padding: 0;\r\n                        }\r\n                        .sidebar-nav li {\r\n                          line-height: 40px;\r\n                          text-indent: 20px;\r\n                        }\r\n                        .sidebar-nav li a {\r\n                          color: #999999;\r\n                          display: block;\r\n                          text-decoration: none;\r\n                          padding-left: 60px;\r\n                        }\r\n                        .sidebar-nav li a span:before {\r\n                          position: absolute;\r\n                          left: 0;\r\n                          color: #41484c;\r\n                          text-align: center;\r\n                          width: 20px;\r\n                          line-height: 18px;\r\n                        }\r\n                        .sidebar-nav li a:hover,\r\n                        .sidebar-nav li.active {\r\n                          color: #fff;\r\n                          background: rgba(255,255,255,0.2);\r\n                          text-decoration: none;\r\n                        }\r\n                        .sidebar-nav li a:active,\r\n                        .sidebar-nav li a:focus {\r\n                          text-decoration: none;\r\n                        }\r\n                        .sidebar-nav > .sidebar-brand {\r\n                          height: 65px;\r\n                          line-height: 60px;\r\n                          font-size: 18px;\r\n                        }\r\n                        .sidebar-nav > .sidebar-brand a {\r\n                          color: #999999;\r\n                        }\r\n                        .sidebar-nav > .sidebar-brand a:hover {\r\n                          color: #fff;\r\n                          background: none;\r\n                        }\r\n                        .inset {\r\n                          padding: 20px;\r\n                        }\r\n                    }\r\n\r\n                        @media (max-width:1224px) {\r\n                            #wrapper {\r\n                              padding-left: 20%;\r\n                              transition: all 0.4s ease 0s;\r\n                            }\r\n                            #sidebar-wrapper {\r\n                              margin-left: -20%;\r\n                              left: 20%;\r\n                              width: 20%;\r\n                              background: #000;\r\n                              position: fixed;\r\n                              height: 100%;\r\n                              overflow-y: auto;\r\n                              z-index: 1000;\r\n                              transition: all 0.4s ease 0s;\r\n                              color: white;\r\n                            }\r\n                            #wrapper.active {\r\n                              padding-left: 0;\r\n                            }\r\n                            #wrapper.active #sidebar-wrapper {\r\n                              left: 0;\r\n                            }\r\n                            #page-content-wrapper {\r\n                              width: 100%;\r\n                            }\r\n                            .sidebar-nav {\r\n                              position: absolute;\r\n                              top: 0;\r\n                              width: 100px;\r\n                              list-style: none;\r\n                              margin: 0;\r\n                              padding: 0;\r\n                            }\r\n                            .sidebar-nav li {\r\n                              line-height: 40px;\r\n                              text-indent: 20px;\r\n                            }\r\n                            .sidebar-nav li a {\r\n                              color: #999999;\r\n                              display: block;\r\n                              text-decoration: none;\r\n                              padding-left: 60px;\r\n                            }\r\n                            .sidebar-nav li a span:before {\r\n                              position: absolute;\r\n                              left: 0;\r\n                              color: #41484c;\r\n                              text-align: center;\r\n                              width: 20px;\r\n                              line-height: 18px;\r\n                            }\r\n                            .sidebar-nav li a:hover,\r\n                            .sidebar-nav li.active {\r\n                              color: #fff;\r\n                              background: rgba(255,255,255,0.2);\r\n                              text-decoration: none;\r\n                            }\r\n                            .sidebar-nav li a:active,\r\n                            .sidebar-nav li a:focus {\r\n                              text-decoration: none;\r\n                            }\r\n                            .sidebar-nav > .sidebar-brand {\r\n                              height: 65px;\r\n                              line-height: 60px;\r\n                              font-size: 80%;\r\n                            }\r\n                            .sidebar-nav > .sidebar-brand a {\r\n                              color: #999999;\r\n                            }\r\n                            .sidebar-nav > .sidebar-brand a:hover {\r\n                              color: #fff;\r\n                              background: none;\r\n                            }\r\n                            .inset {\r\n                              padding: 20px;\r\n                            }\r\n                        }\r\n                    `}</style>\r\n                </Layout>\r\n            )\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAkCA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAhIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmIA;AACA;AAAA;AACA;AAAA;AACA;AAtIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyIA;AACA;AADA;AAGA;AA5IA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+IA;AACA;AACA;AAFA;AAIA;AAnJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsJA;AAIA;AACA;AAFA;AACA;AAGA;AACA;AADA;AACA;AAEA;AACA;AAjKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoKA;AAKA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAlLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqLA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAnMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsMA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AArNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwNA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAxOA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2OA;AACA;AADA;AAGA;AA9OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAWA;AAEA;AADA;AASA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAhRA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAfA;AAiBA;AACA;;;;;;;;;;;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;;;;AAwjBA;AAAA;AAAA;AA2LA;;;;AA1fA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}